WHITESPACE = _{ " " | NEWLINE }
COMMENT = _{ "#" ~ (!NEWLINE ~ ANY)* ~ NEWLINE }

keyword = { "fn" }

initial_identifier_char = @{ ASCII_ALPHA | "_" }
rest_identifier_char = @{ ASCII_ALPHANUMERIC | "_" }
identifier = @{ !keyword ~ initial_identifier_char ~ rest_identifier_char* }

string_literal = ${ "\"" ~ string_interior ~ "\"" }
string_interior = @{ (!"\"" ~ ANY)* }

integer_literal = @{ "-"? ~ ("0" | (ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)) }

literal = {
    integer_literal
    | string_literal
}

program = {
    SOI
    ~ program_entry
    ~ (";" ~ program_entry)* ~ ";"?
    ~ EOI
}

repl_stmt = {
    SOI ~ (program_entry | rule_clauses) ~ ";" ~ EOI
}

program_entry = {
    data_entry
    | rule
}

rule = { rule_lhs ~ "=" ~ rule_clauses }

rule_lhs = {
    identifier ~ "(" ~ (
        ")"
        | identifier ~ ("," ~ identifier)* ~ ")"
    )
}

rule_clauses = { rule_clause ~ ("," ~ rule_clause)* ~ ","? }
rule_clause = {
    src_clause
    | condition_clause
}

src_clause = { identifier ~ "(" ~ (")" | src_clause_params ~ ")")  }
src_clause_params = { column_projection ~ ("," ~ column_projection)* }
column_projection = { identifier ~ (":" ~ value)? }

value = {
    identifier
    | literal
}

// TODO: This is just a placeholder
condition_clause = { identifier ~ "=" ~ literal }

data_entry = { "data" ~ rule_lhs ~ "=" ~ data_rhs }

data_rhs = { data_tuple ~ ("," ~ data_tuple)* }
data_tuple = { "(" ~ literal ~ ("," ~ literal)* ~ ")" }
